
@{
    ViewData["Title"] = "Shop";
}


<!-- Page Header Start -->
<div class="container-fluid bg-secondary mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
        <h1 class="font-weight-semi-bold text-uppercase mb-3">Our Shops</h1>
        <div class="d-inline-flex">
        </div>
    </div>
</div>
<!-- Page Header End -->
<!-- Shop Product Start -->
<div class="container-fluid">
    <div class="row pb-3">
        <div class="col-12 pb-1">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <form asp-action="Index" method="get">
                    <div class="col-lg-10">
                        <div class="input-group form">
                            <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" />
                            <span class="input-group-btn">
                                <input class="btn btn-primary" type="submit" value="Search">
                                <a asp-action="Shop">|| Get All Shops</a>
                            </span>
                        </div>
                    </div>
                </form>
                <div class="dropdown ml-4">
                    <button class="btn border dropdown-toggle" type="button" id="triggerId" data-toggle="dropdown" aria-haspopup="true"
                            aria-expanded="false">
                        Sort by
                    </button>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="triggerId">
                        <a class="dropdown-item" asp-action="Shop" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Sort by Name</a>
                        <a class="dropdown-item" asp-action="Shop" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Sort by Date</a>

                    </div>
                </div>
            </div>
        </div>

        @await Component.InvokeAsync("Shop")




        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <div class="col-12 pb-1">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-3">
                    <li class="page-item ">
                        <a asp-action="Shop"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="page-link @prevDisabled">
                            <
                        </a>
                    </li>
                    
                    <li class="page-item ">
                        <a asp-action="Shop"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="page-link @nextDisabled">
                            >
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
<!-- Shop Product End -->




